// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id          String       @id @default(cuid())
  email       String       @unique
  password    String
  name        String
  role        Role
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  inspeksi    Inspeksi[]   @relation("PetugasInspeksi")
  komentarInspeksi Komentar[] @relation("KomentarPengirim")

  @@map("users")
}

model Inspeksi {
  id                    String            @id @default(cuid())
  kategoriKendaraan     KategoriKendaraan
  nomorKendaraan        String            // Plat Nomor dari form
  lokasiInspeksi        String
  tanggalInspeksi       DateTime          @default(now())
  
  // Petugas 1 - ACTUAL dari form
  namaPetugas           String
  nipPetugas            String
  
  // Petugas 2 - ACTUAL dari form (untuk kategori yang butuh 2 petugas)
  namaPetugas2          String?
  nipPetugas2           String?
  
  // Dokumen STNK - ACTUAL dari form
  masaBerlakuSTNK       DateTime?
  fotoSTNK              String?           // Base64 image
  
  // Dokumen KIR - ACTUAL dari form
  masaBerlakuKIR        DateTime?
  fotoKIR               String?           // Base64 image
  
  // SIM Petugas 1 - ACTUAL dari form
  masaBerlakuSIMPetugas1 DateTime?
  fotoSIMPetugas1       String?           // Base64 image
  
  // SIM Petugas 2 - ACTUAL dari form
  masaBerlakuSIMPetugas2 DateTime?
  fotoSIMPetugas2       String?           // Base64 image
  
  // Service Terakhir - ACTUAL dari form
  tanggalService        DateTime?
  fotoService           String?           // Base64 image
  
  // BBM - ACTUAL dari form
  jumlahBBM             String?           // Jumlah BBM dalam Liter atau BAR
  fotoBBM               String?           // Base64 image
  
  // Data khusus per kategori (JSON) - merk, tahun, warna, GPS, TTD, dll
  dataKhusus            Json?
  
  // Kelengkapan checklist (JSON)
  kelengkapanKendaraan  Json?             // Checklist kelengkapan
  
  // Catatan
  catatan               String?
  
  // Status
  status                StatusInspeksi    @default(DRAFT)
  
  // Approval Manager Traffic
  needsApproval         Boolean           @default(true)
  approvedByTraffic     String?           // User ID Manager Traffic
  approvedAtTraffic     DateTime?
  ttdManagerTraffic     String?           // Base64 signature
  
  // Approval Manager Operational
  approvedByOperational String?           // User ID Manager Operational
  approvedAtOperational DateTime?
  ttdManagerOperasional String?           // Base64 signature
  
  // Rejection
  rejectionNote         String?
  rejectedBy            String?           // "TRAFFIC" atau "OPERATIONAL"
  rejectedAt            DateTime?
  
  // PDF Generation
  pdfUrl                String?           // Path to generated PDF
  pdfGeneratedAt        DateTime?
  
  // Relations
  petugasId             String
  petugas               User              @relation("PetugasInspeksi", fields: [petugasId], references: [id])
  komentar              Komentar[]        @relation("InspeksiKomentar")
  
  createdAt             DateTime          @default(now())
  updatedAt             DateTime          @updatedAt

  @@index([status])
  @@index([petugasId])
  @@index([createdAt])
  @@index([kategoriKendaraan])
  @@index([tanggalInspeksi])
  @@index([petugasId, status])
  @@index([status, createdAt])
  @@map("inspeksi")
}

model Komentar {
  id              String    @id @default(cuid())
  inspeksiId      String
  inspeksi        Inspeksi  @relation("InspeksiKomentar", fields: [inspeksiId], references: [id], onDelete: Cascade)
  
  pengirimId      String
  pengirim        User      @relation("KomentarPengirim", fields: [pengirimId], references: [id])
  namaPengirim    String    // Nama user untuk display
  rolePengirim    Role      // Role user untuk styling
  
  isiKomentar     String    // Isi komentar/pesan
  
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  @@index([inspeksiId])
  @@index([createdAt])
  @@map("komentar")
}

enum Role {
  MANAGER_TRAFFIC
  MANAGER_OPERATIONAL
  PETUGAS_LAPANGAN
}

enum KategoriKendaraan {
  PLAZA
  DEREK
  KAMTIB
  RESCUE
}

enum StatusInspeksi {
  DRAFT
  SUBMITTED
  APPROVED_BY_TRAFFIC
  APPROVED_BY_OPERATIONAL
  REJECTED
}

model RekapManager {
  id                String          @id @default(cuid())
  judulRekap        String          // Judul rekap yang dikirim
  periodeType       PeriodType      // HARIAN, MINGGUAN, BULANAN, TAHUNAN, KUSTOM
  tanggalMulai      DateTime        // Start date periode
  tanggalSelesai    DateTime        // End date periode
  kategoriKendaraan String?         // Filter kategori (null = semua)
  
  // Data statistik
  totalInspeksi     Int             @default(0)
  dataStatistik     Json?           // Breakdown per kategori, status, dll
  
  // Pengirim (Petugas)
  pengirimId        String
  namaPengirim      String
  
  // Penerima (Manager)
  receiverRole      ManagerRole     // TRAFFIC atau OPERATIONAL
  
  // Status
  isRead            Boolean         @default(false)
  readAt            DateTime?
  
  // Metadata
  catatan           String?
  
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt

  @@index([receiverRole])
  @@index([isRead])
  @@index([createdAt])
  @@index([periodeType])
  @@map("rekap_manager")
}

enum PeriodType {
  HARIAN
  MINGGUAN
  BULANAN
  TAHUNAN
  KUSTOM
}

enum ManagerRole {
  TRAFFIC
  OPERATIONAL
}
